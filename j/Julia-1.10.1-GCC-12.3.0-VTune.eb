
easyblock = 'ConfigureMake'

name = 'Julia'
version = '1.10.1'
versionsuffix = '-VTune'

homepage = 'https://julialang.org/'
description = """A high-level, high-performance dynamic language for technical computing.

This version was compiled from source with USE_INTEL_JITEVENTS=1 to enable profiling with VTune."""

toolchain = {'name': 'GCC', 'version': '12.3.0'}

source_urls = ['https://github.com/JuliaLang/julia/releases/download/v%(version)s']
sources = ['%(namelower)s-%(version)s-full.tar.gz']

builddependencies = [
    ('CMake', '3.27.7', '', SYSTEM),
    ('Python','.3.8.2','-bare',SYSTEM),
]

skipsteps = ['configure']

# instead of writing Make.user
_opts_list = [
   "USE_INTEL_JITEVENTS=1", #enable VTune profiling https://docs.julialang.org/en/v1/manual/profile/index.html#External-Profiling-1
   # Bug in code with more than one profiler defined, see
   #https://discourse.julialang.org/t/compiling-fails-with-use-intel-jitevents-use-oprofile-jitevents-and-use-perf-jitevents-1/51274
   # explicity disabling also seems to workaround, so disable oprofile and perf:
   "USE_OPROFILE_JITEVENTS=0",
   "USE_PERF_JITEVENTS=0",
   "prefix=%(installdir)s",
]
installopts = testopts = buildopts = " ".join(_opts_list)

#pretestopts = "JULIA_NUM_THREADS=4 JULIA_CPU_THREADS=4 "
#runtest = "testall"

# central depot
modluafooter = """-- NeSI Central Depot
local central_depot = pathJoin(root, 'local/share/julia')
if os.getenv('USER') == 'nesi-apps-admin' then
   prepend_path('JULIA_DEPOT_PATH', central_depot .. ':' .. pathJoin(root, 'share/julia'))  -- no user dir
   setenv('JULIA_LOAD_PATH', '@:@v#.#:@stdlib:' .. pathJoin(central_depot, 'environment/%(version_major_minor)s'))
else
   prepend_path('JULIA_LOAD_PATH', '@:@v#.#:@stdlib:' .. pathJoin(central_depot, 'environment/%(version_major_minor)s') .. ':.')
end
"""

sanity_check_paths = {
    'files': ['bin/julia'],
    'dirs': [],
}

moduleclass = 'lang'

